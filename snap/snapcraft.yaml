name: onlyoffice-ds
title: ONLYOFFICE Docs
version: "8.2.2"
summary: "An online office suite that allowing to create, view and edit documents."
description: |
  ONLYOFFICE Docs is a free collaborative online office suite comprising viewers and editors for texts, spreadsheets and presentations, forms and PDF, fully compatible with Office Open XML formats: .docx, .xlsx, .pptx and enabling collaborative editing in real time.

  ONLYOFFICE Docs can be used as a part of ONLYOFFICE Workspace or with third-party sync&share solutions (e.g. Nextcloud, ownCloud, Seafile) to enable collaborative editing within their interface.
icon: icons/asc-de-256.png
grade: stable
confinement: strict
base: core22
architectures:
  - build-on: [amd64]
    build-for: [amd64]
  - build-on: [amd64]
    build-for: [arm64]

layout:
  /etc/my.cnf:
    bind-file: $SNAP_DATA/etc/my.cnf
  /etc/my.cnf.d:
    bind: $SNAP_DATA/etc/my.cnf.d
  /usr/bin/python:
    bind-file: $SNAP/usr/bin/python2.7
  /usr/bin/wget:
    bind-file: $SNAP/usr/bin/wget
  /usr/lib/x86_64-linux-gnu/libpsl.so.5:
    bind-file: $SNAP/usr/lib/x86_64-linux-gnu/libpsl.so.5.3.2
  /etc/wgetrc:
    bind-file: $SNAP/etc/wgetrc

lint:
  ignore:
    - classic

environment:
  HOME: $SNAP_DATA
  OPENSSL_CONF: /dev/null

apps:
  documentserver:
    after:
      - nginx
    command: usr/sbin/documentserver-start.sh
    daemon: simple
    plugs: [network, network-bind, removable-media, desktop, unity7]

  node:
    command: bin/node
    plugs: [network, network-bind, removable-media]
  
  nginx:
    command: usr/sbin/nginx-start.sh
    daemon: simple
    restart-condition: always
    plugs: [network, network-bind, removable-media]

  rabbitmq:
    command: usr/lib/rabbitmq/bin/rabbitmq-server
    daemon: simple
    plugs: [network, network-bind, removable-media]

  # MySQL daemon
  mysql:
    command: bin/start_mysql
    stop-command: support-files/mysql.server stop
    daemon: simple
    restart-condition: always
    plugs: [network, network-bind]
  
  # MySQL client
  mysql-client:
    command: bin/run-mysql
    plugs: [network, network-bind]

  mysqldump:
    command: bin/mysqldump --lock-tables onlyoffice
    plugs: [network, network-bind]

  generate-all-fonts:
    command: usr/sbin/generate-all-fonts.sh
    plugs: [desktop, unity7]

  pluginsmanager:
    command: usr/sbin/documentserver-pluginsmanager.sh
    plugs: [network, network-bind, removable-media, desktop, unity7]

hooks:
  configure:
    plugs: [network, network-bind, account-control, gpg-keys, accounts-service, system-observe] #system-files, 

  install:
    plugs: [network, network-bind, removable-media, desktop, unity7]

  pre-refresh:
    plugs: [network, network-bind, removable-media, desktop, unity7]

  post-refresh:
    plugs: [network, network-bind, removable-media, desktop, unity7]

parts:
  rabbitmq:
    plugin: dump
    source: https://github.com/rabbitmq/rabbitmq-server/releases/download/v3.9.13/rabbitmq-server_3.9.13-1_all.deb
    source-type: deb
    stage-packages:
      - erlang
    override-build: |
      craftctl default
      # rabbitmq-server
      sed -i -e 's/rabbitmq-env/rabbitmq-env-start.sh/g' $SNAPCRAFT_PART_INSTALL/usr/lib/rabbitmq/lib/rabbitmq_server-3.9.13/sbin/rabbitmq-server
      sed -i -e 's/ROOTDIR=/ROOTDIR=$SNAP/g' $SNAPCRAFT_PART_INSTALL/usr/lib/erlang/bin/erl

  server:
    plugin: dump
    source:
      - on amd64: https://download.onlyoffice.com/install/documentserver/linux/onlyoffice-documentserver-${SNAPCRAFT_PROJECT_VERSION}_x86_64.tar.gz
      - on arm64: https://download.onlyoffice.com/install/documentserver/linux/onlyoffice-documentserver-${SNAPCRAFT_PROJECT_VERSION}_aarch64.tar.gz
    stage-packages:
      - curl
      - libxml2
      - fonts-dejavu
      - fonts-liberation
      - fonts-crosextra-carlito
      - fonts-takao-gothic
      - fonts-opensymbol
      - create-resources
      - libreadline-dev
      - libc-bin
      - locales-all
      - locales
      - libc6
      - python2
      - python3
      - python-setuptools
      - wget
    override-build: |
      craftctl default
      # msttcorefonts
      echo ttf-mscorefonts-installer msttcorefonts/accepted-mscorefonts-eula select true | debconf-set-selections
      apt-get -yq install ttf-mscorefonts-installer
      if [  $(ls -l /usr/share/fonts/truetype/msttcorefonts | wc -l) -ne 61 ]; then
        # fault to install msttcorefonts
        sed -i -e 's|http://downloads.sourceforge.net/corefonts/|https://netcologne.dl.sourceforge.net/project/corefonts/the%20fonts/final/|g' /usr/share/package-data-downloads/ttf-mscorefonts-installer
        /usr/lib/update-notifier/package-data-downloader
      fi
      cp -r /usr/share/fonts/truetype/msttcorefonts $CRAFT_PART_INSTALL/usr/share/fonts/truetype
      DIR="$CRAFT_PART_INSTALL/var/www/onlyoffice/documentserver"
      rm -r $DIR/server/welcome
      DIR_ETC="$CRAFT_PART_INSTALL/etc/onlyoffice/documentserver"
      mkdir -p $DIR_ETC
      mv $DIR/server/Common/config/* $DIR_ETC
      #example
      mkdir -p $DIR_ETC-example
      sed -i -e 's|/var/lib/onlyoffice|/var/snap/onlyoffice-ds/current/var/lib/onlyoffice|' $DIR-example/nodejs/config/production-linux.json
      mv $DIR-example/nodejs/config/* $DIR_ETC-example
      # documentserver-generate-allfonts.sh
      OUTDIR="/var/snap/onlyoffice-ds/current/var/www/onlyoffice/documentserver"
      #fonts
      ln -s -f $OUTDIR/server/FileConverter/bin/AllFonts.js $DIR/server/FileConverter/bin/AllFonts.js
      ln -s -f $OUTDIR/server/FileConverter/bin/font_selection.bin $DIR/server/FileConverter/bin/font_selection.bin
      ln -s -f $OUTDIR/fonts $DIR/fonts
      ln -s -f $OUTDIR/sdkjs/common/Images/fonts_thumbnail.png              $DIR/sdkjs/common/Images/fonts_thumbnail.png
      ln -s -f $OUTDIR/sdkjs/common/Images/fonts_thumbnail@1.25x.png        $DIR/sdkjs/common/Images/fonts_thumbnail@1.25x.png
      ln -s -f $OUTDIR/sdkjs/common/Images/fonts_thumbnail@1.5x.png         $DIR/sdkjs/common/Images/fonts_thumbnail@1.5x.png
      ln -s -f $OUTDIR/sdkjs/common/Images/fonts_thumbnail@1.75x.png        $DIR/sdkjs/common/Images/fonts_thumbnail@1.75x.png
      ln -s -f $OUTDIR/sdkjs/common/Images/fonts_thumbnail@2x.png           $DIR/sdkjs/common/Images/fonts_thumbnail@2x.png
      ln -s -f $OUTDIR/sdkjs/common/Images/fonts_thumbnail_ea.png           $DIR/sdkjs/common/Images/fonts_thumbnail_ea.png
      ln -s -f $OUTDIR/sdkjs/common/Images/fonts_thumbnail_ea@1.25x.png     $DIR/sdkjs/common/Images/fonts_thumbnail_ea@1.25x.png
      ln -s -f $OUTDIR/sdkjs/common/Images/fonts_thumbnail_ea@1.5x.png      $DIR/sdkjs/common/Images/fonts_thumbnail_ea@1.5x.png
      ln -s -f $OUTDIR/sdkjs/common/Images/fonts_thumbnail_ea@1.75x.png     $DIR/sdkjs/common/Images/fonts_thumbnail_ea@1.75x.png
      ln -s -f $OUTDIR/sdkjs/common/Images/fonts_thumbnail_ea@2x.png        $DIR/sdkjs/common/Images/fonts_thumbnail_ea@2x.png
      ln -s -f $OUTDIR/sdkjs/common/Images/fonts_thumbnail.png.bin          $DIR/sdkjs/common/Images/fonts_thumbnail.png.bin
      ln -s -f $OUTDIR/sdkjs/common/Images/fonts_thumbnail@1.25x.png.bin    $DIR/sdkjs/common/Images/fonts_thumbnail@1.25x.png.bin
      ln -s -f $OUTDIR/sdkjs/common/Images/fonts_thumbnail@1.5x.png.bin     $DIR/sdkjs/common/Images/fonts_thumbnail@1.5x.png.bin
      ln -s -f $OUTDIR/sdkjs/common/Images/fonts_thumbnail@1.75x.png.bin    $DIR/sdkjs/common/Images/fonts_thumbnail@1.75x.png.bin
      ln -s -f $OUTDIR/sdkjs/common/Images/fonts_thumbnail@2x.png.bin       $DIR/sdkjs/common/Images/fonts_thumbnail@2x.png.bin
      ln -s -f $OUTDIR/sdkjs/common/Images/fonts_thumbnail_ea.png.bin       $DIR/sdkjs/common/Images/fonts_thumbnail_ea.png.bin
      ln -s -f $OUTDIR/sdkjs/common/Images/fonts_thumbnail_ea@1.25x.png.bin $DIR/sdkjs/common/Images/fonts_thumbnail_ea@1.25x.png.bin
      ln -s -f $OUTDIR/sdkjs/common/Images/fonts_thumbnail_ea@1.5x.png.bin  $DIR/sdkjs/common/Images/fonts_thumbnail_ea@1.5x.png.bin
      ln -s -f $OUTDIR/sdkjs/common/Images/fonts_thumbnail_ea@1.75x.png.bin $DIR/sdkjs/common/Images/fonts_thumbnail_ea@1.75x.png.bin
      ln -s -f $OUTDIR/sdkjs/common/Images/fonts_thumbnail_ea@2x.png.bin    $DIR/sdkjs/common/Images/fonts_thumbnail_ea@2x.png.bin
      ln -s -f $OUTDIR/sdkjs/common/AllFonts.js $DIR/sdkjs/common/AllFonts.js
      #themes
      mv $DIR/sdkjs/slide/themes $DIR/sdkjs/slide/themes_backup
      ln -s -f $OUTDIR/sdkjs/slide/themes $DIR/sdkjs/slide/themes
      ln -s -f $OUTDIR/sdkjs/common/Images/themes_thumbnail.png       $DIR/sdkjs/common/Images/themes_thumbnail.png
      ln -s -f $OUTDIR/sdkjs/common/Images/themes_thumbnail@1.25x.png $DIR/sdkjs/common/Images/themes_thumbnail@1.25x.png
      ln -s -f $OUTDIR/sdkjs/common/Images/themes_thumbnail@1.5x.png  $DIR/sdkjs/common/Images/themes_thumbnail@1.5x.png
      ln -s -f $OUTDIR/sdkjs/common/Images/themes_thumbnail@1.75x.png $DIR/sdkjs/common/Images/themes_thumbnail@1.75x.png
      ln -s -f $OUTDIR/sdkjs/common/Images/themes_thumbnail@2x.png    $DIR/sdkjs/common/Images/themes_thumbnail@2x.png
      #package version
      BUILD_VERSION=`cat var/www/onlyoffice/documentserver/server/Common/sources/commondefines.js | grep "const buildVersion" | grep -o "[0-9.]*"`
      BUILD_NUMBER=`cat var/www/onlyoffice/documentserver/server/Common/sources/commondefines.js | grep "const buildNumber" | grep -o "[0-9]*"`
      echo $BUILD_VERSION-$BUILD_NUMBER > $CRAFT_STAGE/version
      cp -r $DIR/server/Common/node_modules/ms $DIR/server/FileConverter/node_modules/
      #fix wopi enable page
      sed -i -e '/wopi.enable/c <br />Set the <b>onlyoffice.wopi</b> parameter in the Document Server snap configuration to <b>true</b>.' $DIR-example/nodejs/views/wopiIndex.ejs
      #Add symlink for documentserver-flush-cache.sh script
      mv $DIR/web-apps/apps/api/documents/api.js $DIR/web-apps/apps/api/documents/api.js.tpl
      ln -s -f $OUTDIR/web-apps/apps/api/documents/api.js $DIR/web-apps/apps/api/documents/api.js

  node:
    plugin: dump
    source:
      - on amd64: https://nodejs.org/dist/v16.15.0/node-v16.15.0-linux-x64.tar.gz
      - on arm64: https://nodejs.org/dist/v16.15.0/node-v16.15.0-linux-arm64.tar.gz
    override-build: |
      craftctl default
      rm -f $CRAFT_PART_INSTALL/README.md

  supervisor:
    plugin: dump
    source: http://archive.ubuntu.com/ubuntu/pool/universe/s/supervisor/supervisor_3.3.1-1.1_all.deb
    source-type: deb
    stage-packages:
      - python2
    override-build: |
      craftctl default
      SUPERVISOR_DIR=$CRAFT_PART_INSTALL/etc/supervisor
      INIT_D_DIR=$CRAFT_PART_INSTALL/etc/init.d
      sed -i -e 's|/var|%(ENV_SNAP_DATA)s/var|g' $SUPERVISOR_DIR/supervisord.conf
      sed -i -e 's|/etc|%(ENV_SNAP_DATA)s/etc|g' $SUPERVISOR_DIR/supervisord.conf
      sed -i '3,5d' $SUPERVISOR_DIR/supervisord.conf
      sed -i -e 's|usr/sbin/nginx|snap/onlyoffice-ds/current/usr/sbin/nginx|g' $INIT_D_DIR/supervisor
      sed -i -e 's|etc|snap/onlyoffice-ds/current/etc|g' $INIT_D_DIR/supervisor
      sed -i -e 's|lib|snap/onlyoffice-ds/current/lib|g' $INIT_D_DIR/supervisor

  nginx:
    plugin: dump
    source: https://github.com/nginx/nginx.git
    source-type: git
    source-tag: release-1.23.1
    stage-packages:
      - python-setuptools
      - python3-setuptools
    override-build: |
      craftctl default
      wget https://www.zlib.net/fossils/zlib-1.2.11.tar.gz
      wget https://www.openssl.org/source/openssl-1.1.1p.tar.gz
      mkdir zlib
      mkdir openssl
      tar xvf zlib-1.2.11.tar.gz --strip-components 1 -C zlib/
      tar xvf openssl-1.1.1p.tar.gz --strip-components 1 -C openssl/
      wget https://sourceforge.net/projects/pcre/files/pcre/8.41/pcre-8.41.tar.gz/download -O pcre.tar.gz
      mkdir pcre
      tar xvf pcre.tar.gz --strip-components 1 -C pcre/
      auto/configure --prefix=/snap/onlyoffice-ds/current/etc/nginx --sbin-path=/snap/onlyoffice-ds/current/usr/sbin --conf-path=/var/snap/onlyoffice-ds/current/etc/nginx/nginx.conf \
      --error-log-path=/var/snap/onlyoffice-ds/current/var/log/nginx/error.log --http-log-path=/var/snap/onlyoffice-ds/current/var/log/nginx/access.log --pid-path=/var/snap/onlyoffice-ds/current/var/run/nginx.pid \
      --lock-path=/var/snap/onlyoffice-ds/current/var/lock/nginx.lock --http-client-body-temp-path=/var/snap/onlyoffice-ds/current/var/cache/nginx/client_temp --http-proxy-temp-path=/var/snap/onlyoffice-ds/current/var/cache/nginx/proxy_temp \
      --http-fastcgi-temp-path=/var/snap/onlyoffice-ds/current/var/cache/nginx/fastcgi_temp --http-uwsgi-temp-path=/var/snap/onlyoffice-ds/current/var/cache/nginx/uwsgi_temp --http-scgi-temp-path=/var/snap/onlyoffice-ds/current/var/cache/nginx/scgi_temp \
      --with-http_secure_link_module --with-http_ssl_module --with-mail_ssl_module --with-openssl=openssl --with-http_v2_module
      make
      mkdir -p $CRAFT_PART_INSTALL/bin
      cp objs/nginx $CRAFT_PART_INSTALL/bin/nginx
      mkdir -p $CRAFT_PART_INSTALL/etc/nginx
      cp conf/* $CRAFT_PART_INSTALL/etc/nginx
      mkdir -p $CRAFT_PART_INSTALL/etc/nginx/conf.d
      rm -f etc/nginx/modules
      rm $CRAFT_PART_INSTALL/etc/nginx/nginx.conf
    build-packages:
      - libc6
      - libgd3
      - libgeoip1
      - libssl3
      - libxml2
      - libxslt1.1
      - build-essential
      - autoconf
      - automake
      - pkg-config
      - libtool
      - libpcre3-dev
      - libpcre++-dev
      - zlib1g
      - zlib1g-dev
      - wget
  
  boost:
    plugin: dump
    source: https://github.com/kyrofa/boost_tarball/raw/master/boost_1_59_0.tar.gz
    stage:
      - boost/
    prime:
      - -*

  mysql:
    plugin: cmake
    source: https://github.com/mysql/mysql-server.git
    source-tag: mysql-5.7.27
    source-depth: 1
    override-pull: |
      craftctl default
    after: [boost, patches]
    cmake-parameters:
      - -WITH_LIBWRAP=ON
      - -DMYSQL_TCP_PORT=3306
      - -DWITH_BOOST=$CRAFT_STAGE
      - -DWITH_INNODB_PAGE_CLEANER_PRIORITY=OFF
      - -DCMAKE_INSTALL_PREFIX=/
      - -DBUILD_CONFIG=mysql_release
      - -DWITH_UNIT_TESTS=OFF
      - -DWITH_EMBEDDED_SERVER=OFF
      - -DWITH_ARCHIVE_STORAGE_ENGINE=OFF
      - -DWITH_BLACKHOLE_STORAGE_ENGINE=OFF
      - -DWITH_FEDERATED_STORAGE_ENGINE=OFF
      - -DWITH_PARTITION_STORAGE_ENGINE=OFF
      - -DINSTALL_MYSQLTESTDIR=
    stage-packages:
      - libaio1
    build-packages:
      - wget
      - g++
      - cmake
      - bison
      - libncurses5-dev
      - libaio-dev
    stage:
      # Remove scripts that we'll be replacing with our own
      - -support-files/mysql.server
      - -COPYING
    prime:
      # Remove scripts that we'll be replacing with our own
      - -support-files/mysql.server

      # Remove unused binaries that waste space
      - -bin/innochecksum
      - -bin/lz4_decompress
      - -bin/myisam*
      - -bin/mysqladmin
      - -bin/mysqlbinlog
      - -bin/mysql_client_test
      - -bin/mysql_config*
      - -bin/mysqld_multi
      - -bin/mysqlimport
      - -bin/mysql_install_db
      - -bin/mysql_plugin
      - -bin/mysqlpump
      - -bin/mysql_secure_installation
      - -bin/mysqlshow
      - -bin/mysqlslap
      - -bin/mysql_ssl_rsa_setup
      - -bin/mysqltest
      - -bin/mysql_tzinfo_to_sql
      - -bin/perror
      - -bin/replace
      - -bin/resolveip
      - -bin/resolve_stack_dump
      - -bin/zlib_decompress

  mysql-customizations:
    plugin: dump
    source: src/mysql/

  patches:
    source: src/patches
    plugin: dump
    prime:
      - -*
  common:
    plugin: dump
    source: src/common/

  ds-package:
    after:
      - server
    plugin: nil
    source: https://github.com/ONLYOFFICE/document-server-package.git
    source-type: git
    override-build: |
      craftctl default
      SNAP_DATA_DIR=/var/snap/onlyoffice-ds/current
      SNAP_DIR=/snap/onlyoffice-ds/current
      PACKAGE_VERSION=`cat $CRAFT_STAGE/version`
      #welcome page
      WECLOME_DIR=$CRAFT_PART_INSTALL/var/www/onlyoffice/documentserver/server/welcome
      WECLOME_HTML=$WECLOME_DIR/index.html
      mkdir -p $WECLOME_DIR
      cp -r common/documentserver-example/welcome/css $WECLOME_DIR
      cp common/documentserver-example/welcome/linux.html $WECLOME_HTML
      sed -i -e 's/{{OFFICIAL_PRODUCT_NAME}}/Community Edition/' $WECLOME_HTML
      sed -i -e 's/{{year}}/2024/' $WECLOME_HTML
      sed -i -e 's/sudo systemctl start ds-example/sudo snap set onlyoffice-ds onlyoffice.example-enabled=true/' $WECLOME_HTML
      sed -i -e 's|The secret.*parameter.|The secret is available by <em>sudo snap get onlyoffice-ds onlyoffice.jwt-secret</em> command.|' $WECLOME_HTML
      sed -i -e 's|read the .*</a>|just use <em>sudo snap set onlyoffice-ds onlyoffice.jwt-secret=new-secret-key</em> command.|' $WECLOME_HTML
      sed -i -e '/<h3>Add it to the autostart/d' $WECLOME_HTML
      sed -i -e '/<pre>sudo systemctl enable/d' $WECLOME_HTML
      #nginx configs
      NGINX_DIR=$CRAFT_PART_INSTALL/etc/onlyoffice/documentserver/nginx
      mkdir -p $NGINX_DIR/includes
      ##ds.conf.tmpl
      NGINX_INCLUDES_DIR=$SNAP_DATA_DIR/etc/onlyoffice/documentserver/nginx/includes
      cp common/documentserver/nginx/ds.conf.tmpl.m4 $NGINX_DIR/ds.conf.tmpl
      sed -i -e "s|M4_NGINX_CONF|$NGINX_INCLUDES_DIR|" $NGINX_DIR/ds.conf.tmpl
      sed -i -e 's/80/DS_PORT/' $NGINX_DIR/ds.conf.tmpl
      sed -i -r 's/(server_tokens off;)/\1\n #allow 127.0.0.1;\n #deny all;/' \
        $NGINX_DIR/ds.conf.tmpl
      ##ds-ssl.conf.tmpl
      cp common/documentserver/nginx/ds-ssl.conf.tmpl.m4 $NGINX_DIR/ds-ssl.conf.tmpl
      sed -i -e "s|M4_NGINX_CONF|$NGINX_INCLUDES_DIR|" $NGINX_DIR/ds-ssl.conf.tmpl
      sed -i -e 's/80/DS_PORT/' $NGINX_DIR/ds-ssl.conf.tmpl
      sed -i -e 's/443/DSS_PORT/' $NGINX_DIR/ds-ssl.conf.tmpl
      sed -i -r 's/(server_tokens off;)/\1\n #allow 127.0.0.1;\n #deny all;/' \
        $NGINX_DIR/ds-ssl.conf.tmpl
      ##ds-common.conf
      SNAP_DS_COMMON_CONF=$NGINX_DIR/includes/ds-common.conf
      cp common/documentserver/nginx/includes/ds-common.conf.m4 $SNAP_DS_COMMON_CONF
      sed -i -e "s|M4_NGINX_LOG|$SNAP_DATA_DIR/var/log/nginx|" $SNAP_DS_COMMON_CONF
      ##ds-docservice.conf
      SNAP_DS_DOCSERVICE_CONF=$NGINX_DIR/includes/ds-docservice.conf
      cp common/documentserver/nginx/includes/ds-docservice.conf.m4 $SNAP_DS_DOCSERVICE_CONF
      if [ $(grep -n "M4_DS_ROOT" $SNAP_DS_DOCSERVICE_CONF | grep 27 | wc -l) -ne 1 ]; then
        echo "Incorrect ds-docservice.conf file"
        exit 1
      fi
      sed -i -e "27 s|M4_DS_ROOT|$SNAP_DATA_DIR/var/www/onlyoffice/documentserver|" $SNAP_DS_DOCSERVICE_CONF
      sed -i -e 's|#welcome page|location ~ ^(/[\\d]+\\.[\\d]+\\.[\\d]+[\\.\|-][\\d]+)?/(sdkjs-plugins)(/.*)$ {\n#welcome page|' $SNAP_DS_DOCSERVICE_CONF
      sed -i -e "s|#welcome page|  expires 365d;\n  alias $SNAP_DATA_DIR/var/www/onlyoffice/documentserver/\$2\$3;\n}\n\n#welcome page|" $SNAP_DS_DOCSERVICE_CONF
      sed -i -e 's/|sdkjs-plugins//' $SNAP_DS_DOCSERVICE_CONF
      sed -i -e "s|M4_DS_ROOT|$SNAP_DIR/var/www/onlyoffice/documentserver|" $SNAP_DS_DOCSERVICE_CONF
      sed -i -e "s/M4_PACKAGE_VERSION/$PACKAGE_VERSION/" $SNAP_DS_DOCSERVICE_CONF
      sed -i -e 's|M4_DEV_NULL|/dev/null|' $SNAP_DS_DOCSERVICE_CONF
      sed -i -e 's|M4_DS_FILES|/var/snap/onlyoffice-ds/common/var/lib/onlyoffice/documentserver|' $SNAP_DS_DOCSERVICE_CONF
      sed -i -e 's|M4_PRODUCT_VERSION|${SNAPCRAFT_PROJECT_VERSION}|' $SNAP_DS_DOCSERVICE_CONF
      ##http-common.conf
      cp common/documentserver/nginx/includes/http-common.conf.m4 $NGINX_DIR/includes/http-common.conf
      ##ds-example.conf
      SNAP_DS_EXAMPLE_CONF=$NGINX_DIR/includes/ds-example.conf
      cp common/documentserver-example/nginx/includes/ds-example.conf.m4 $SNAP_DS_EXAMPLE_CONF
      sed -i -e 's/M4_PLATFORM/index/' $SNAP_DS_EXAMPLE_CONF
      sed -i -e "s|M4_DS_EXAMLE|$SNAP_DIR/var/www/onlyoffice/documentserver/server|" $SNAP_DS_EXAMPLE_CONF
      #Add documentserver-pluginsmanager.sh to snap
      mkdir -p $CRAFT_PART_INSTALL/usr/sbin
      SNAP_PLUGINSMANAGER_SH=$CRAFT_PART_INSTALL/usr/sbin/documentserver-pluginsmanager.sh
      cp common/documentserver/bin/documentserver-pluginsmanager.sh.m4 $SNAP_PLUGINSMANAGER_SH
      chmod +x $SNAP_PLUGINSMANAGER_SH
      sed -i -e "s|M4_DS_PREFIX|onlyoffice/documentserver|" $SNAP_PLUGINSMANAGER_SH
      sed -i -e "s/PLUGIN_MANAGER=\"/PLUGIN_MANAGER=\"\$SNAP/" $SNAP_PLUGINSMANAGER_SH
      sed -i -e "s/PLUGIN_DIR=\"/PLUGIN_DIR=\"\$SNAP_DATA/" $SNAP_PLUGINSMANAGER_SH
      sed -i -e 's|\$RESTART_CONDITION|false|' $SNAP_PLUGINSMANAGER_SH
      sed -i -e 's|sdkjs-plugins/"|sdkjs-plugins/"\n\nif [ ! -d \${PLUGIN_DIR} ]; then\n  mkdir -p \${PLUGIN_DIR}\n  cp -R \$SNAP/var/www/onlyoffice/documentserver/sdkjs-plugins \${PLUGIN_DIR}/..\nfi|' $SNAP_PLUGINSMANAGER_SH
      sed -i -e "s|LD_LIBRARY_PATH=|LD_LIBRARY_PATH=\$SNAP|" $SNAP_PLUGINSMANAGER_SH
      sed -i -e '/chown/d' $SNAP_PLUGINSMANAGER_SH
      sed -i -e 's|"\${args\[@\]}"|--update="\${PLUGIN_DIR}/plugin-list-default.json"|' $SNAP_PLUGINSMANAGER_SH
      #Add documentserver-prepare4shutdown.sh to snap
      SNAP_PREPARE4SHUTDOWN_SH=$CRAFT_PART_INSTALL/usr/sbin/documentserver-prepare4shutdown.sh
      cp common/documentserver/bin/documentserver-prepare4shutdown.sh.m4 $SNAP_PREPARE4SHUTDOWN_SH
      chmod +x $SNAP_PREPARE4SHUTDOWN_SH
      #Add documentserver-flush-cache.sh to snap
      SNAP_FLUSH_CACHE_SH=$CRAFT_PART_INSTALL/usr/sbin/documentserver-flush-cache.sh
      cp common/documentserver/bin/documentserver-flush-cache.sh.m4 $SNAP_FLUSH_CACHE_SH
      sed -i -e "s|M4_DS_PREFIX|onlyoffice/documentserver|" $SNAP_FLUSH_CACHE_SH
      sed -i -e "s|/var|\$SNAP_DATA/var|" $SNAP_FLUSH_CACHE_SH
      sed -i -e "s|/etc|\$SNAP_DATA/etc/onlyoffice/documentserver|" $SNAP_FLUSH_CACHE_SH
      chmod +x $SNAP_FLUSH_CACHE_SH


  starter:
    plugin: dump
    source: ./config/
    organize:
      nginx.conf: etc/nginx/nginx.conf
      local.json: etc/onlyoffice/documentserver/local.json
      example-local.json: etc/onlyoffice/documentserver-example/local.json
      ds-docservice.conf: etc/supervisor/conf.d/ds-docservice.conf
      ds-converter.conf: etc/supervisor/conf.d/ds-converter.conf
      ds-example.conf: etc/supervisor/conf.d/ds-example.conf
      ds.conf: etc/supervisor/conf.d/ds.conf

  bin:
    plugin: dump
    source: ./bin/
    organize:
      documentserver-start.sh: usr/sbin/documentserver-start.sh
      rabbitmq-env-start.sh: usr/lib/rabbitmq/bin/rabbitmq-env-start.sh
      nginx-start.sh: usr/sbin/nginx-start.sh
      generate-all-fonts.sh: usr/sbin/generate-all-fonts.sh
