#!/bin/sh

cp $SNAP/my.cnf $SNAP_DATA/mysql/my.cnf
DEFAULT_HTTP_PORT="80"
DEFAULT_DB_PORT="3306"
DEFAULT_JWT_ENABLED="false"
DEFAULT_JWT_SECRET="secret"
DEFAULT_JWT_HEADER="Authorization"


nginx_onlyoffice_http_port()
{
	onlyoffice_http_port="$(onlyoffice_http_port)"
	previous_onlyoffice_http_port="$(previous_onlyoffice_http_port)"

	# If no changes were requested, then there's nothing to do here.
	if [ "$onlyoffice_http_port" = "$previous_onlyoffice_http_port" ]; then
		return 0
	fi
	set_onlyoffice_http_port "$onlyoffice_http_port"
	set_previous_onlyoffice_http_port $onlyoffice_http_port
	snapctl restart onlyoffice-ds.nginx
}

set_onlyoffice_http_port()
{
	snapctl set onlyoffice.ds-port="$1"
}

onlyoffice_http_port()
{
	port="$(snapctl get onlyoffice.ds-port)"
	if [ -z "$port" ]; then
		port="$DEFAULT_HTTP_PORT"
		set_onlyoffice_http_port $port
		set_previous_onlyoffice_http_port $port
	fi

	echo "$port"
}

previous_onlyoffice_http_port()
{
	snapctl get private.onlyoffice.ds-port
}

set_previous_onlyoffice_http_port()
{
	snapctl set private.onlyoffice.ds-port="$1"
}




db_onlyoffice_db_port()
{
	onlyoffice_db_port="$(onlyoffice_db_port)"
	previous_onlyoffice_db_port="$(previous_onlyoffice_db_port)"

	# If no changes were requested, then there's nothing to do here.
	if [ "$onlyoffice_db_port" = "$previous_onlyoffice_db_port" ]; then
		return 0
	fi
	set_onlyoffice_db_port "$onlyoffice_db_port"
	set_previous_onlyoffice_db_port $onlyoffice_db_port
	sed -i "/dbPort/s/"${previous_onlyoffice_db_port}"/"${onlyoffice_db_port}"/g" $SNAP_DATA/etc/onlyoffice/documentserver/local.json
	sed -i "/port/s/"${previous_onlyoffice_db_port}"/"${onlyoffice_db_port}"/g" $SNAP_DATA/mysql/root.ini
	snapctl restart onlyoffice-ds
}

set_onlyoffice_db_port()
{
	snapctl set onlyoffice.db-port="$1"
}

onlyoffice_db_port()
{
	port="$(snapctl get onlyoffice.db-port)"
	if [ -z "$port" ]; then
		port="$DEFAULT_DB_PORT"
		set_onlyoffice_db_port $port
		set_previous_onlyoffice_db_port $port
	fi

	echo "$port"
}

previous_onlyoffice_db_port()
{
	snapctl get private.onlyoffice.db-port
}

set_previous_onlyoffice_db_port()
{
	snapctl set private.onlyoffice.db-port="$1"
}




token_onlyoffice_jwt_enabled()
{
	onlyoffice_jwt_enabled="$(onlyoffice_jwt_enabled)"
	previous_onlyoffice_jwt_enabled="$(previous_onlyoffice_jwt_enabled)"

	# If no changes were requested, then there's nothing to do here.
	if [ "$onlyoffice_jwt_enabled" = "$previous_onlyoffice_jwt_enabled" ]; then
		return 0
	fi
	set_onlyoffice_jwt_enabled "$onlyoffice_jwt_enabled"
	set_previous_onlyoffice_jwt_enabled $onlyoffice_jwt_enabled
	update_jwt_enabled_settings
	snapctl restart onlyoffice-ds.documentserver
}

set_onlyoffice_jwt_enabled()
{
	snapctl set onlyoffice.jwt-enabled="$1"
}

onlyoffice_jwt_enabled()
{
	port="$(snapctl get onlyoffice.jwt-enabled)"
	if [ -z "$port" ]; then
		port="$DEFAULT_JWT_ENABLED"
		set_onlyoffice_jwt_enabled $port
		set_previous_onlyoffice_jwt_enabled $port
	fi

	echo "$port"
}

previous_onlyoffice_jwt_enabled()
{
	snapctl get private.onlyoffice.jwt-enabled
}

set_previous_onlyoffice_jwt_enabled()
{
	snapctl set private.onlyoffice.jwt-enabled="$1"
}

update_jwt_enabled_settings()
{
	sed -i "/browser/s/"${previous_onlyoffice_jwt_enabled}"/"${onlyoffice_jwt_enabled}"/g" $SNAP_DATA/etc/onlyoffice/documentserver/local.json
	sed -i "/inbox/s/"${previous_onlyoffice_jwt_enabled}"/"${onlyoffice_jwt_enabled}"/g" $SNAP_DATA/etc/onlyoffice/documentserver/local.json
	sed -i "/outbox/s/"${previous_onlyoffice_jwt_enabled}"/"${onlyoffice_jwt_enabled}"/g" $SNAP_DATA/etc/onlyoffice/documentserver/local.json
}




token_onlyoffice_jwt_secret()
{
	onlyoffice_jwt_secret="$(onlyoffice_jwt_secret)"
	previous_onlyoffice_jwt_secret="$(previous_onlyoffice_jwt_secret)"

	# If no changes were requested, then there's nothing to do here.
	if [ "$onlyoffice_jwt_secret" = "$previous_onlyoffice_jwt_secret" ]; then
		return 0
	fi
	set_onlyoffice_jwt_secret "$onlyoffice_jwt_secret"
	set_previous_onlyoffice_jwt_secret $onlyoffice_jwt_secret
	sed -i "/inbox/s/"${previous_onlyoffice_jwt_secret}"/"${onlyoffice_jwt_secret}"/g" $SNAP_DATA/etc/onlyoffice/documentserver/local.json
	sed -i "/outbox/s/"${previous_onlyoffice_jwt_secret}"/"${onlyoffice_jwt_secret}"/g" $SNAP_DATA/etc/onlyoffice/documentserver/local.json
	sed -i "/session/s/"${previous_onlyoffice_jwt_secret}"/"${onlyoffice_jwt_secret}"/g" $SNAP_DATA/etc/onlyoffice/documentserver/local.json
	snapctl restart onlyoffice-ds.documentserver
}

set_onlyoffice_jwt_secret()
{
	snapctl set onlyoffice.jwt-secret="$1"
}

onlyoffice_jwt_secret()
{
	port="$(snapctl get onlyoffice.jwt-secret)"
	if [ -z "$port" ]; then
		port="$DEFAULT_JWT_SECRET"
		set_onlyoffice_jwt_secret $port
		set_previous_onlyoffice_jwt_secret $port
	fi

	echo "$port"
}

previous_onlyoffice_jwt_secret()
{
	snapctl get private.onlyoffice.jwt-secret
}

set_previous_onlyoffice_jwt_secret()
{
	snapctl set private.onlyoffice.jwt-secret="$1"
}




token_onlyoffice_jwt_header()
{
	onlyoffice_jwt_header="$(onlyoffice_jwt_header)"
	previous_onlyoffice_jwt_header="$(previous_onlyoffice_jwt_header)"
	set_onlyoffice_jwt_header "$onlyoffice_jwt_header"
	set_previous_onlyoffice_jwt_header $onlyoffice_jwt_header
	sed -i "/header/s/"${previous_onlyoffice_jwt_header}"/"${onlyoffice_jwt_header}"/g" $SNAP_DATA/etc/onlyoffice/documentserver/local.json
	snapctl restart onlyoffice-ds.documentserver
}

set_onlyoffice_jwt_header()
{
	snapctl set onlyoffice.jwt-header="$1"
}

onlyoffice_jwt_header()
{
	port="$(snapctl get onlyoffice.jwt-header)"
	if [ -z "$port" ]; then
		port="$DEFAULT_JWT_HEADER"
		set_onlyoffice_jwt_header $port
		set_previous_onlyoffice_jwt_header $port
	fi

	echo "$port"
}

previous_onlyoffice_jwt_header()
{
	snapctl get private.onlyoffice.jwt-header
}

set_previous_onlyoffice_jwt_header()
{
	snapctl set private.onlyoffice.jwt-header="$1"
}




nginx_onlyoffice_http_port && \
db_onlyoffice_db_port && \
token_onlyoffice_jwt_enabled && \
token_onlyoffice_jwt_secret && \
token_onlyoffice_jwt_header
